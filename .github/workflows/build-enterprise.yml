name: Checkout and build ET image # reusable workflow

on:
    workflow_call:
        inputs:
            ref:
                required: true
                type: string
            image_name:
                required: true
                type: string
            image_tag:
                required: true
                type: string
            et_workspace_path:
                required: true
                type: string

jobs:
    build_and_push:
        runs-on: ubuntu-latest
        env:
            registry_user: ${{ secrets.CONTAINER_REGISTRY_GH_USER }}
            registry_token: ${{ secrets.CONTAINER_REGISTRY_GH_TOKEN }}
            docker_user: ${{ secrets.DOCKERHUB_USERNAME }}
            docker_token: ${{ secrets.DOCKERHUB_TOKEN }}
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Check odoo/enterprise source
              uses: actions/checkout@v4
              with:
                  repository: odoo/enterprise
                  token: ${{ secrets.ET_REPO_TOKEN }}
                  ref: ${{ inputs.ref }}.0
                  fetch-depth: 1
                  path: odoo-enterprise

            - name: Checkout Enterprise source
              uses: actions/checkout@v4
              with:
                  repository: ${{ secrets.ET_REPO_PATH }}
                  token: ${{ secrets.ET_REPO_TOKEN }}
                  path: ${{ inputs.et_workspace_path }}
                  ref: ${{ inputs.ref }}
                  fetch-depth: 1

            - name: Copy odoo/enterprise to my source
              run: |
                  cp -rf odoo-enterprise/* ${{inputs.et_workspace_path}}/et-addons/

            - name: Push change to remote
              continue-on-error: true
              run: |
                  cd ${{inputs.et_workspace_path}}
                  git config --global user.name "TruongPX"
                  git config --global user.email "truong@vdx.vn"
                  git commit -am "Update latest release for Odoo enterprise: $(date +'%d/%m/%Y')"
                  git push

            - name: Build image
              run: |
                  cd ${{ inputs.et_workspace_path }}
                  docker build . \
                        -t ghcr.io/${{ env.registry_user }}/${{ inputs.image_tag }} \
                        -t ${{ env.docker_user }}/${{ inputs.image_tag }}

            - name: Login to GitHub container registry
              run: echo "${{ env.registry_token }}" | docker login ghcr.io -u ${{ env.registry_user }} --password-stdin

            - name: Publish image to GitHub container registry
              run: |
                  docker push ghcr.io/${{ env.registry_user }}/${{ inputs.image_tag }}

            - name: Remove untagged (old) image from GitHub container registry
              uses: ./.github/actions/delete-untagged-packages
              with:
                  github_token: ${{ env.registry_token }}
                  package_name: ${{ inputs.image_name }}
                  organization: ${{ env.registry_user }}

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ env.docker_user }}
                  password: ${{ env.docker_token }}

            - name: Publish image to Docker Hub
              run: |
                  docker push ${{ env.docker_user }}/${{ inputs.image_tag }}
